import os
#############################################################
#            FUNCIONES QUE MODIFICAN LOS
#                 DATOS DEL PROGRAMA
#############################################################

def open_files():
	"""
	return dict dic_box: diccionario con los datos de un .CSV
	KEY="numero de la caja" VALUE="lista con los datos de la caja"
	
	abre el archivo .CSV que contiene la información de las cajas,
	crea un diccionario con esta información,
	retorna dicho diccionario.
	"""
	path = "box_data.csv"
	temp_list = [line.strip().split(",") for line in open(path)]
	dic_box = {}
	IND = 1
	for DATA in temp_list:
		dic_box[IND] = DATA
		IND += 1
	return dic_box
	
def dict_to_list_box(dic_box):
	"""
	param dict dic_box: Diccionario con los valores de cada caja 
	KEY="numero de la caja" VALUE="lista con los datos de la caja"
	return list list_box: lista que contiene los valores de las cajas
	
	recibe un diccionario con los datos de las cajas,
	pone los datos en una lista,
	retorna dicha lista.
	"""
	dict_box = dic_box[:]
	list_box = []
	for DATA in dic_box.values():
		temp_list = [DATA]
		list_box.append(temp_list)
	return list_box

def values(data): #Esta función controla las excepciones de los valores de la caja
  information={1:"peso (Kg):", 2:"largo(Cm):", 3:"alto(Cm):", 4:"ancho(Cm):"}
  new_data=information[data]
  value="not value"
  while value=="not value":
    try:
       value=int(input("Ingrese el valor del "+new_data))
       if value<0:
         value="not value"
         print("por favor escriba un valor numérico mayor a 0")
    except:
      print("por favor escriba un valor numérico mayor a 0")   
  return value 

def create_box(number_box):
    #modificacion
    """
    crea una caja en forma de lista donde se guarda 
    en el indice 0 el numero de la caja
    en el indice 1 el peso
    en el indice 2 el largo
    en el indice 3 el ancho
    en el indice 4 el alto
    en el indice 5 el volumen

    :param int number_box: Numero de la caja 
    :return: list[] 
    """
    box =[]#Crea una caja VACIA
    print("______________________________________________________")
    print(f"                 Caja {number_box}")
    print("______________________________________________________")
    box.append(number_box)
    box.append(values(1))
    box.append(values(2))
    box.append(values(4))
    box.append(values(3))
    box.append( box[2]*box[3]*box[4]) #Volumen de la caja

    return box

def set_box(list_box,num_box,index,new_value):
    """
    modifica el parametro de una caja
    :param list[] list_box: Lista de cajas
    :param int num_box: numero que identifica una caja
    :param int index: indice del parametro de la caja a modificar
    :param int new_value: Nuevo valor del parametro
    """ 
    for num in range(len(list_box)):
        if list_box[num][0] == num_box :   
            list_box[num][index]= new_value
            list_box[num][5]= list_box[num][2]*list_box[num][3]*list_box[num][4]  #Actualiza el volumen  

def add_box(list_box):
    '''
    añade una cantidad de cajas nueva a la lista de cajas
    :param list[] list_box: lista de cajas
    :return: list[] 
    '''
    while True:
        try:
            number_box = int(input("Ingrese el numero de cajas a registrar. "))
            while number_box <=0:
                print("¡NUMERO DE CAJAS INVALIDO!")
                number_box = int(input("Ingrese el numero de cajas a registrar. "))

            for num in range(len(list_box),len(list_box)+number_box):   
                list_box.append(create_box(num+1)) 
            break       
        except:
            print("Entrada no valida") 
    return list_box

def box_in_list(list_box,num_box):
    """
    valida si el numero de la caja esta dentro de la lista
    :param list[] list_box: Lista de cajas
    :param int num_box: Numero de caja
    :return: True|False
    """
    if num_box <= len(list_box) and num_box>0:
        return True
    else:
        return False

def create_list_box(number_box):
    """
    crea una lista de cajas
    :param int number_box: numero de cajas
    :return: list[]
    """
    list_box = []
    for x in range(number_box):  
        list_box.append(create_box(x+1)) #Guarda en una lista las cajas ingresadas por el usuario, x+1 para que el numero de caja no empiece en 0
    return list_box

def sort_list_box_less(list_box,filter): 
    """
    organiza una lista de cajas de acuerdo con un filtro de menor a mayor
    :param list[] list_box: lista de cajas
    :param int filter: filtro por el que se organiza(1=peso, 2=altura, 3=largo, 4=ancho, 5=volumen, 0=numero de caja)
    """    
    for step in range(1,len(list_box)): 
        for position in range(len(list_box)-step): 
            if list_box[position][filter] > list_box[position+1][filter]:
                temp = list_box[position]
                list_box[position] = list_box[position+1]
                list_box[position+1]= temp

def sort_list_box_mayor(list_box,filter): 
    """
    organiza una lista de cajas de acuerdo con un filtro de mayor a menor
    :param list[] list_box: lista de cajas
    :param int filter: filtro por el que se organiza(1=peso, 2=altura, 3=largo, 4=ancho, 5=volumen, 0=numero de caja)
    """  
    for step in range(1,len(list_box)):
        for position in range(len(list_box)-step): 
            if list_box[position][filter] < list_box[position+1][filter]:
                temp = list_box[position]
                list_box[position] = list_box[position+1]
                list_box[position+1]= temp
    

def menu(list_box):
    '''
    tiene la logica del funcionamiento del menu principal
    :param list[] list_box: lista de cajas
    '''
    filter = 0
    while True:
        print_menu()
        option = input("Ingrese la opcion deseada: ")
        
        if option == '1':#imprime la lista de cajas
            clear_screen()
            print_list_box(list_box)

        elif option == '2':#ordenar por filtro
            clear_screen()
            while True:
                print_menu_filter()
                while True:
                    option = input("Ingrese la opcion deseada: ")
                    try:
                         filter = int(option)
                         break
                    except:
                        print("OPCION INVALIDA")                    
                
                if option == '1':#ordenar por peso
                    clear_screen()
                    while True:                        
                        print_menu_mayor_minor()
                        option = input("Ingrese la opcion deseada: ")
                        if option == "1":
                            sort_list_box_less(list_box,1)
                            break

                        elif option == '2':
                            sort_list_box_mayor(list_box,1)
                            break

                        else: 
                            print("¡OPCION INVALIDA!")                  
                    break                   

                elif option == '2':#ordenar por largo
                    clear_screen()
                    while True:
                        print_menu_mayor_minor()
                        option = input("Ingrese la opcion deseada: ")
                        if option == "1":
                            sort_list_box_less(list_box,2)
                            break

                        elif option == '2':
                            sort_list_box_mayor(list_box,2)
                            break

                        else: 
                            print("¡OPCION INVALIDA!")
                    break

                elif option == '3':#ordenar por ancho
                    clear_screen()
                    while True:
                        print_menu_mayor_minor()
                        option = input("Ingrese la opcion deseada: ")
                        if option == "1":
                            sort_list_box_less(list_box,3)
                            break

                        elif option == '2':
                            sort_list_box_mayor(list_box,3)
                            break

                        else: 
                            print("¡OPCION INVALIDA!")
                    break

                elif option == '4':#ordenar por alto
                    clear_screen()
                    while True:
                        print_menu_mayor_minor()
                        option = input("Ingrese la opcion deseada: ")
                        if option == "1":
                            sort_list_box_less(list_box,4)
                            break

                        elif option == '2':
                            sort_list_box_mayor(list_box,4)
                            break

                        else: 
                            print("¡OPCION INVALIDA!")  
                    break                   
           

                elif option == '5':#ordenar por volumen
                    clear_screen()
                    while True:
                        print_menu_mayor_minor()
                        option = input("Ingrese la opcion deseada: ")
                        if option == "1":
                            sort_list_box_less(list_box,5)
                            break

                        elif option == '2':
                            sort_list_box_mayor(list_box,5)
                            break

                        else: 
                            print("¡OPCION INVALIDA!")
                    break                       

                elif option == '6': #Ordenar por numero de caja
                    clear_screen() 
                    while True:
                        print_menu_mayor_minor()
                        option = input("Ingrese la opcion deseada: ")
                        if option == "1":
                            sort_list_box_less(list_box,0)
                            break

                        elif option == '2':
                            sort_list_box_mayor(list_box,0)
                            break

                        else: 
                            print("¡OPCION INVALIDA!")
                    break  
     
                else: 
                    print("¡OPCION INVALIDA!")            

        elif option == '3':#Modificar caja
            clear_screen()

            while True:
                print_select_box(list_box)

                while True:
                    option = input("Seleccione el numero de caja a modificar: ")
                    try:
                        option = int(option)
                        break
                    except:
                        print("OPCION INVALIDA")  

                if box_in_list(list_box,option):  
                    num_parameters = 4#peso,alto,largo,ancho

                    while True:
                        print_menu_set_parameter(option)

                        while True:
                            option2 = input("Seleccione el parametro a modificar: ")
                            try:

                                option2 = int(option2)
                                break
                            except:
                                print("OPCION INVALIDA")  
                        option2 = int(option2)

                        while True:
                            new = input("Nuevo valor (Recuerde que solo puede utilizar numeros enteros): ")
                            try:
                                new = int(new)
                                break
                            except:
                                print("¡ENTRADA INVALIDA!")

                        if option2 <= num_parameters and option2 >0:       
                            set_box(list_box,option,option2,new)
                            break
                        else:
                            print("¡OPCION INVALIDA!")    
                    break

                else:
                    print("¡NUMERO DE CAJA INVALIDO!")
                

        elif option == '4':
            clear_screen()
            print_add_box()
            add_box(list_box)

        elif option == '5':
            clear_screen()
            print_box(list_box,filter)   
            
        elif option == 'e':
            break
        
        else:
            print("OPCION INVALIDA")  
            
##############################################################
#       FUNCIONES DE LA INTERFAZ GRAFICA DE USUARIO
##############################################################
def clear_screen(): #Definimos la función estableciendo el nombre que queramos
    if os.name == "posix":
        os.system ("clear")
    elif os.name == "ce" or os.name == "nt" or os.name == "dos":
        os.system ("cls")

def print_menu():
    """
    imprime el menu principal    
    """   
    print("####################################################################################")
    print("                                     SORT BOX")
    print("                               Organizador de cajas")
    print()
    print("                                  MENU PRINCIPAL")
    print("####################################################################################")
    print()
    print("1. Imprimir lista de cajas")
    print("2. Organizar lista de cajas")
    print("3. Modificar caja")
    print("4. Agregar cajas")
    print("5. Imprimir las cajas graficamente ")
    print()
    print("'e' para salir del programa")
    print()
    print()
    print()
    print("                     Este programa ha sido deesarrollado por:")
    print("                                  David Pulido")
    print("                                  Juan Laverde")
    print("                                 Miguel Parada")
    print()
    print("                        Universidad Nacional de Colombia")
    print("####################################################################################")
    
def print_menu_filter():
    """
    imprime el menu de opciones para organizar de acuerdo a un filtro
    """
    print("####################################################################################")
    print("                            ORGANIZAR LISTA DE CAJAS") 
    print("####################################################################################")
    print()
    print("1. Ordenar por peso")
    print("2. Ordenar por largo")
    print("3. Ordenar por ancho")
    print("4. Ordenar por alto")
    print("5. Ordenar por volumen") 
    print("6. Ordenar por numero de caja")  
    print()

def print_menu_mayor_minor():
    """
    imprime el menu de opciones para organizar
    """
    print("####################################################################################")
    print("                              METODO DE ORGANIZACION")
    print("####################################################################################")
    print()
    print("1.Ordenar de menor a mayor")
    print("2.Ordenar de mayor a menor")
    print()   

def print_list_box(list_box):
    """
    Imprime una lista de cajas con un formato
    :param lis[] list_box: lista de cajas
    """
    print("####################################################################################")
    print("                                 LISTA DE CAJAS")
    print("####################################################################################")
    print("____________________________________________________________________________________")  
    print()
    print("|  n. caja   ||  peso kg   ||  largo cm  ||  ancho cm  ||  alto  cm  ||volumen cm^3|")
    for i in range(len(list_box)):
        for j in range(len(list_box[i])): 
            print(f"|{list_box[i][j]:12}",end = '|')
        print()  
    print("____________________________________________________________________________________")  

def print_menu_set_parameter(number_box):
    """
    imprime el menu de las opciones de los parametros que se pueden modificar en una caja    
    :param int number_box: Numero de la caja
    """
    
    print("####################################################################################")
    print("                                 CAJA No. "+str(number_box))
    print("                              Parametro a modificar") 
    print("####################################################################################")
    print()
    print("1. Peso")
    print("2. Largo")
    print("3. Ancho")
    print("4. Alto")
    print()
    
def print_select_box(list_box):
    """
    Imprime el menu de seleccion de las caja
    :param list[] list_box: Lista de cajas
    """
    print("####################################################################################")
    print("                                   MODIFICAR CAJA")
    print("####################################################################################")
    print()
    print_list_box(list_box)
   
def print_box(box_list,filter):

    '''
     Imprime cajas en el orden filtrado con un formato grafico
    :param list[] box_list: lista de cajas
    :param int filter: Filtro por el que se ordenan las cajas 
    '''
    print("####################################################################################")
    print("                                   VISTA DE ESTANTE")
    print("####################################################################################")
    
    magnitud=''
    if filter == 1:
        magnitud = 'kg'
    elif filter>1 and filter<5:
        magnitud = 'cm'
    elif filter == 5:
        magnitud = 'cm^3'

    for box_id in range(len(box_list)):
        
        info = str(box_list[box_id][filter])
        box_len = len(info)

        zero_character = "0" * ((box_len+len(magnitud) )- int(box_list[box_id][0])//10 - 1)        
        line = "┼"+'─'* (box_len+len(magnitud))+"┼"

        print(line)
        print("│" + zero_character + str(box_list[box_id][0]) + "│")
        print("│" + info + magnitud+"│")
        print(line)
        print() 

def print_add_box():
    print("####################################################################################")
    print("                                   AGREGAR CAJAS") 
    print("####################################################################################")

################################################################
#                  INICIO DEL PROGRAMA
################################################################

def main():
    list_box = []   
    if len(list_box) == 0:
        print("####################################################################################")
        print("                                     SORT BOX")
        print("                               Organizador de cajas")
        print()
        print("                                  MENU PRINCIPAL")
        print("####################################################################################")
        print("No hay cajas registradas")
        add_box(list_box) 

    menu(list_box)
   
main()
